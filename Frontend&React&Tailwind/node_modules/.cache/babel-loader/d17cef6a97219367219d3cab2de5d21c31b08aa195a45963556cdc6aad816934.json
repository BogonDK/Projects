{"ast":null,"code":"import axios from 'axios';\n\n// Create a new offer\nexport const createNewOffer = async offerInfo => {\n  const data = new FormData();\n  data.append('title', offerInfo.title);\n  data.append('businessId', offerInfo.businessId);\n  data.append('startDate', offerInfo.startDate);\n  data.append('endDate', offerInfo.endDate);\n  data.append('description', offerInfo.description);\n  data.append('offerCode', offerInfo.offerCode);\n  data.append('offerImage', offerInfo.offerImage);\n  console.log('data', data);\n  const response = await axios.post(\"http://localhost:8080/BusinessUsers/CreateOffer\", data, {\n    headers: {\n      'Content-Type': 'application/multipart/form-data'\n    }\n  });\n  console.log('Response', response);\n  console.log('Response data:', response.data).catch(error => {\n    if (error.response) {\n      console.log('Server responded with status code:', error.response.status);\n      console.log('Response data:', error.response.data);\n    } else if (error.request) {\n      console.log('No response received:', error.request);\n    } else {\n      console.log('Error creating request:', error.message);\n    }\n  });\n  return await response.data;\n};\n\n// Update an offer\nexport const updateOffer = async offerInfo => {\n  const data = new FormData();\n  data.append('title', offerInfo.title);\n  data.append('offerId', offerInfo.offerId);\n  data.append('startDate', offerInfo.startDate);\n  data.append('endDate', offerInfo.endDate);\n  data.append('description', offerInfo.description);\n  data.append('offerCode', offerInfo.offerCode);\n  data.append('offerImage', offerInfo.offerImage);\n  console.log(\"data\", data);\n  const response = await axios.post(\"http://localhost:8080/BusinessUsers/UpdateOffer\", data, {\n    headers: {\n      'Content-Type': 'application/multipart/form-data'\n    }\n  }).catch(error => {\n    if (error.response) {\n      console.log('Server responded with status code:', error.response.status);\n      console.log('Response data:', error.response.data);\n    } else if (error.request) {\n      console.log('No response received:', error.request);\n    } else {\n      console.log('Error creating request:', error.message);\n    }\n  });\n  return await response.data;\n};\n\n// Get all offers\nexport const getAllOffers = async () => {\n  const response = await axios.get(\"http://localhost:8080/BusinessUsers/AllOffers/\", {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).catch(error => {\n    if (error.response) {\n      console.log('Server responded with status code:', error.response.status);\n      console.log('Response data:', error.response.data);\n    } else if (error.request) {\n      console.log('No response received:', error.request);\n    } else {\n      console.log('Error creating request:', error.message);\n    }\n  });\n  return await response.data;\n};\nexport const getOfferDetails = async offerID => {\n  const data = {\n    id: offerID\n  };\n  const response = await axios.post(\"http://localhost:8080/BusinessUsers/OfferInfo/\", data, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).catch(error => {\n    if (error.response) {\n      console.log('Server responded with status code:', error.response.status);\n      console.log('Response data:', error.response.data);\n    } else if (error.request) {\n      console.log('No response received:', error.request);\n    } else {\n      console.log('Error creating request:', error.message);\n    }\n  });\n  return await response.data;\n};","map":{"version":3,"names":["axios","createNewOffer","offerInfo","data","FormData","append","title","businessId","startDate","endDate","description","offerCode","offerImage","console","log","response","post","headers","catch","error","status","request","message","updateOffer","offerId","getAllOffers","get","getOfferDetails","offerID","id"],"sources":["C:/Users/bogon/CSE498/ally-offers-ecosystem/frontend/src/actions/offersAction.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\n// Create a new offer\r\nexport const createNewOffer = async (offerInfo) => {\r\n    \r\n    const data = new FormData();\r\n    data.append('title', offerInfo.title);\r\n    data.append('businessId', offerInfo.businessId);\r\n    data.append('startDate', offerInfo.startDate);\r\n    data.append('endDate', offerInfo.endDate);\r\n    data.append('description', offerInfo.description);\r\n    data.append('offerCode', offerInfo.offerCode);\r\n    data.append('offerImage', offerInfo.offerImage);\r\n    console.log('data', data)\r\n    const response = await axios.post(\r\n        \"http://localhost:8080/BusinessUsers/CreateOffer\",\r\n        data,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/multipart/form-data',\r\n            },\r\n        },\r\n    )\r\n    console.log('Response', response)\r\n    console.log('Response data:', response.data)\r\n    .catch((error) => {\r\n        if (error.response) {\r\n            console.log('Server responded with status code:', error.response.status);\r\n            console.log('Response data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.log('No response received:', error.request);\r\n        } else {\r\n            console.log('Error creating request:', error.message);\r\n        }\r\n    });\r\n    return await response.data;\r\n};\r\n\r\n\r\n// Update an offer\r\nexport const updateOffer = async (offerInfo) => {\r\n    const data = new FormData();\r\n    data.append('title', offerInfo.title);\r\n    data.append('offerId',offerInfo.offerId);\r\n    data.append('startDate', offerInfo.startDate);\r\n    data.append('endDate', offerInfo.endDate);\r\n    data.append('description', offerInfo.description);\r\n    data.append('offerCode', offerInfo.offerCode);\r\n    data.append('offerImage', offerInfo.offerImage);\r\n\r\n    console.log(\"data\", data)\r\n    const response = await axios.post(\r\n        \"http://localhost:8080/BusinessUsers/UpdateOffer\",\r\n        data,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/multipart/form-data',\r\n            },\r\n        },\r\n    )\r\n    .catch((error) => {\r\n        if (error.response) {\r\n            console.log('Server responded with status code:', error.response.status);\r\n            console.log('Response data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.log('No response received:', error.request);\r\n        } else {\r\n            console.log('Error creating request:', error.message);\r\n        }\r\n    });\r\n    return await response.data;\r\n};\r\n\r\n// Get all offers\r\nexport const getAllOffers = async () => {\r\n    const response = await axios.get(\r\n        \"http://localhost:8080/BusinessUsers/AllOffers/\",\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n        },\r\n    )\r\n    .catch((error) => {\r\n        if (error.response) {\r\n            console.log('Server responded with status code:', error.response.status);\r\n            console.log('Response data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.log('No response received:', error.request);\r\n        } else {\r\n            console.log('Error creating request:', error.message);\r\n        }\r\n    });\r\n\r\n    return await response.data;\r\n};\r\n\r\nexport const getOfferDetails = async (offerID) => {\r\n    const data = {\r\n        id: offerID,\r\n    };\r\n\r\n    const response = await axios.post(\r\n        \"http://localhost:8080/BusinessUsers/OfferInfo/\", \r\n        data,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n        },\r\n    )\r\n    .catch((error) => {\r\n        if (error.response) {\r\n            console.log('Server responded with status code:', error.response.status);\r\n            console.log('Response data:', error.response.data);\r\n        } else if (error.request) {\r\n            console.log('No response received:', error.request);\r\n        } else {\r\n            console.log('Error creating request:', error.message);\r\n        }\r\n    });\r\n    return await response.data;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}